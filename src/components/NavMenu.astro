---
import { getCollection } from "astro:content";

interface Item {
  url: string;
  label: string;
  sortIndex: number;
}

const { label, folder } = Astro.props as { label: string; folder: string };

// Grab just the entries in this folder (e.g. "registration/*")
const entries = await getCollection("pages", (page) =>
  page.id.startsWith(`${folder}/`),
);

const items: Item[] = entries
  .map((e) => ({
    url: `/${e.id}/`,
    label: e.data.title,
    sortIndex: e.data.sortIndex,
  }))
  .sort((a, b) => a.sortIndex - b.sortIndex);
---

<nav class="relative" aria-label={label}>
  <div class="group relative inline-block">
    <button
      type="button"
      class="flex cursor-pointer select-none items-center gap-1 rounded-md border border-ink bg-white px-3 py-2 font-semibold hover:bg-soft focus-visible:outline focus-visible:outline-2 focus-visible:outline-brand"
      aria-haspopup="menu"
    >
      {label}
    </button>

    <ul
      class="absolute right-0 top-full z-20 hidden min-w-[14rem] rounded-xl border border-soft bg-white p-2 shadow-lg group-focus-within:block group-hover:block"
      role="menu"
    >
      {
        items.map((it) => (
          <li class="list-none" role="none">
            <a
              class="block rounded-md px-3 py-2 text-inherit no-underline outline-none hover:bg-soft focus:bg-soft"
              href={it.url}
              role="menuitem"
            >
              {it.label}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</nav>
