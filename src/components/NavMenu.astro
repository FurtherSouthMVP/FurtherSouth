---
import { getCollection } from "astro:content";

interface Item {
  url: string;
  label: string;
  sortIndex: number;
}

const {
  label,
  folder,
  mobile = false,
} = Astro.props as {
  label: string;
  folder: string;
  mobile?: boolean;
};

const pages = await getCollection("pages", (e) => e.id.startsWith(`${folder}`));

const indexEntry = pages.find((page) => page.id === folder);
const indexHref = indexEntry ? `/${folder}/` : undefined;

const items: Item[] = pages
  .filter((page) => page.id !== folder)
  .map((page) => ({
    url: `/${page.id}/`,
    label: page.data.title,
    sortIndex: page.data.sortIndex,
  }))
  .sort((a, b) => a.sortIndex - b.sortIndex);

const toggleId = `toggle-${folder}`;
const listId = `mobile-${folder}`;
---

{
  mobile ? (
    <nav aria-label={label} class="w-full">
      {items.length > 0 ? (
        <>
          <div class="flex items-center gap-2">
            <button
              id={toggleId}
              class="flex flex-1 items-center justify-between py-2 font-semibold"
              type="button"
              aria-expanded="false"
              aria-controls={listId}
              data-nav-toggle
            >
              <span>{label}</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M19 9l-7 7-7-7"
                />
              </svg>
            </button>
            {indexHref && (
              <a
                href={indexHref}
                class="p-2 text-inherit no-underline"
                aria-label={`Go to ${label}`}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17 8l4 4-4 4m0 0H3m14-4H3"
                  />
                </svg>
              </a>
            )}
          </div>
          <ul id={listId} class="ml-4 hidden flex-col">
            {items.map((it) => (
              <li class="list-none">
                <a
                  class="block rounded-md px-3 py-2 text-inherit no-underline hover:bg-soft"
                  href={it.url}
                >
                  {it.label}
                </a>
              </li>
            ))}
          </ul>
        </>
      ) : indexHref ? (
        <a
          href={indexHref}
          class="block py-2 font-semibold text-inherit no-underline"
        >
          {label}
        </a>
      ) : (
        <span class="block py-2 font-semibold">{label}</span>
      )}
    </nav>
  ) : (
    <nav class="relative" aria-label={label}>
      <div class="group relative inline-flex items-center gap-1">
        {indexHref ? (
          <a
            href={indexHref}
            class="rounded-md px-3 py-2 font-semibold text-inherit no-underline hover:bg-soft focus-visible:outline focus-visible:outline-2 focus-visible:outline-brand"
          >
            {label}
          </a>
        ) : (
          <span class="rounded-md px-3 py-2 font-semibold">{label}</span>
        )}

        {items.length > 0 && (
          <ul
            id={`menu-${folder}`}
            class="absolute right-0 top-full z-20 hidden min-w-[14rem] rounded-xl border border-soft bg-white p-2 shadow-lg group-focus-within:block group-hover:block"
          >
            {items.map((it) => (
              <li class="list-none">
                <a
                  class="block rounded-md px-3 py-2 text-inherit no-underline outline-none hover:bg-soft focus:bg-soft"
                  href={it.url}
                >
                  {it.label}
                </a>
              </li>
            ))}
          </ul>
        )}
      </div>
    </nav>
  )
}
