---
// Reusable hero/banner component used by any page/layout.
// Props: title, eyebrow, description, logo, heroImage, updated, cta {label,url}
// Controls: variant ('default' | 'home' | 'compact'), align ('left' | 'center')
import { site } from '../data/site';
import ActivitiesMenu from './ActivitiesMenu.astro';

const {
  title = site.name,
  eyebrow = site.eyebrow ?? site.name,
  description = site.description,
  logo = site.logo,
  heroImage = '',
  updated,
  cta,
  variant = 'default',
  align = 'left',
} = Astro.props;
---
<header class={['hero', `v-${variant}`, `a-${align}`].join(' ')} style={heroImage ? { '--hero-image': `url(${heroImage})` } : undefined}>
  <div class="wrap">
    {logo && <img class="logo" src={logo} alt={site.name + ' logo'} width="96" height="96" loading="eager" />}
    <div>
      {eyebrow && <div class="eyebrow">{eyebrow}</div>}
      <h1><span class="title-underline">{title}</span></h1>
      {description && <p class="desc">{description}</p>}
      <div class="cta-row">
        {cta?.url && cta?.label && (
          <a class="btn primary" href={cta.url}>{cta.label}</a>
        )}
        {updated && (
          <span class="meta">Last updated: {new Date(updated).toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: '2-digit' })}</span>
        )}
      </div>
      <!-- Activities dropdown injected under the banner copy -->
      <div class="menu-row">
        <ActivitiesMenu label="Activities" />
      </div>
    </div>
  </div>

  <svg class="wave" viewBox="0 0 1440 120" preserveAspectRatio="none" aria-hidden="true">
    <path d="M0,64 C240,128 480,0 720,48 C960,96 1200,80 1440,32 L1440,120 L0,120 Z" fill="#fff" />
  </svg>

  <style>
    :root {
      --ink: #0b1220; --muted: #5b657a; --soft: #eef1f7; --brand: #1e6bff;
      --bg-top: #f4f9ff; --bg-mid: #ffffff; --wrap: 72rem;
    }
    .hero { position: relative; padding: 4rem 1rem 3.5rem; border-bottom: 1px solid var(--soft); isolation: isolate; }
    .hero { background: radial-gradient(1200px 400px at 50% 0%, var(--bg-top), var(--bg-mid)); overflow: clip; }
    .hero::before { content: ''; position: absolute; inset: 0; z-index: -1; background: var(--hero-image, none); background-size: cover; background-position: center; opacity: var(--bg-opacity, .18); }
    .hero .wrap { max-width: var(--wrap); margin: 0 auto; display: grid; gap: 1rem; justify-items: start; }
    .eyebrow { text-transform: uppercase; letter-spacing: .08em; font-size: .8rem; color: var(--muted); }
    h1 { margin: .25rem 0 0; font-size: clamp(1.75rem, 4vw, 2.5rem); line-height: 1.15; }
    .title-underline { display: inline; background: linear-gradient(currentColor, currentColor) left bottom/100% 3px no-repeat; text-decoration: none; }
    .desc { margin-top: .5rem; color: #2f3a52; max-width: 60ch; }
    .meta { margin-top: .5rem; color: var(--muted); font-size: .9rem; }
    .cta-row { margin-top: 1rem; display: flex; gap: .75rem; align-items: center; flex-wrap: wrap; }
    .btn { display: inline-block; padding: .65rem 1rem; border-radius: .75rem; border: 1px solid var(--ink); text-decoration: none; font-weight: 600; }
    .btn.primary { background: var(--ink); color: #fff; }
    .logo { width: clamp(72px, 10vw, 96px); height: auto; border-radius: 999px; box-shadow: 0 8px 24px rgba(0,0,0,.08); background: #fff; }
    .wave { position: absolute; left: 0; right: 0; bottom: -1px; height: 60px; z-index: -1; }

    .menu-row { margin-top: 1rem; }

    /* Variants */
    .v-home { padding: 6rem 1rem 4rem; }
    .v-compact { padding: 2.25rem 1rem; }

    /* Alignment */
    .a-center .wrap { justify-items: center; text-align: center; }

    @media (prefers-reduced-motion: no-preference) {
      .hero { background-attachment: fixed; }
    }
  </style>
</header>